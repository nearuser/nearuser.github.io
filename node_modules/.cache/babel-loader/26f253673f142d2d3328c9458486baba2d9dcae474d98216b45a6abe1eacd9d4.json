{"ast":null,"code":"var _jsxFileName = \"/home/snorlax/Escritorio/proyectos/ReactProy/tareas/src/componentes/ListaDeTareas.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Formulario from \"./Formulario\";\nimport '../hojas-de-estilo/ListaDeTareas.css';\nimport { useState } from \"react\";\nimport Tarea from \"./Tarea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListaDeTareas() {\n  _s();\n  const [tareas, setTareas] = useState([]);\n  const agregarTarea = tarea => {\n    console.log(agregarTarea);\n    if (tarea.texto.trim()) {\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formulario, {\n      onSubmit: agregarTarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taras-lista-contenedor\",\n      children: tareas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n        id: tarea.id,\n        texto: tarea.texto,\n        completada: tarea.completada,\n        eliminarTarea: eliminarTarea,\n        completarTarea: completarTarea\n      }, tarea.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListaDeTareas, \"qEPh+FJX576aOe1wcgToovFk070=\");\n_c = ListaDeTareas;\n;\nexport default ListaDeTareas;\nvar _c;\n$RefreshReg$(_c, \"ListaDeTareas\");","map":{"version":3,"names":["React","Formulario","useState","Tarea","jsxDEV","_jsxDEV","Fragment","_Fragment","ListaDeTareas","_s","tareas","setTareas","agregarTarea","tarea","console","log","texto","trim","tareasActualizadas","eliminarTarea","id","filter","completarTarea","map","completada","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/snorlax/Escritorio/proyectos/ReactProy/tareas/src/componentes/ListaDeTareas.js"],"sourcesContent":["import React from \"react\";\nimport Formulario from \"./Formulario\";\nimport '../hojas-de-estilo/ListaDeTareas.css'\nimport { useState } from \"react\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = tarea => {\n    console.log(agregarTarea);\n    if (tarea.texto.trim()){\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  }\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  }\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  }\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className='taras-lista-contenedor'>\n        {\n          tareas.map((tarea) =>\n            <Tarea \n              key={tarea.id}\n              id={tarea.id}\n              texto={tarea.texto}\n              completada={tarea.completada}\n              eliminarTarea={eliminarTarea}\n              completarTarea={completarTarea}\n            />\n          )\n        }\n      </div>\n    </>\n  );  \n};\n\nexport default ListaDeTareas;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,sCAAsC;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAGC,KAAK,IAAI;IAC5BC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;IACzB,IAAIC,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,EAAC;MACrBJ,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC;MAChC,MAAMC,kBAAkB,GAAG,CAACL,KAAK,EAAE,GAAGH,MAAM,CAAC;MAC7CC,SAAS,CAACO,kBAAkB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,aAAa,GAAGC,EAAE,IAAI;IAC1B,MAAMF,kBAAkB,GAAGR,MAAM,CAACW,MAAM,CAACR,KAAK,IAAIA,KAAK,CAACO,EAAE,KAAKA,EAAE,CAAC;IAClET,SAAS,CAACO,kBAAkB,CAAC;EAC/B,CAAC;EAED,MAAMI,cAAc,GAAGF,EAAE,IAAI;IAC3B,MAAMF,kBAAkB,GAAGR,MAAM,CAACa,GAAG,CAACV,KAAK,IAAI;MAC7C,IAAIA,KAAK,CAACO,EAAE,KAAKA,EAAE,EAAE;QACnBP,KAAK,CAACW,UAAU,GAAG,CAACX,KAAK,CAACW,UAAU;MACtC;MACA,OAAOX,KAAK;IACd,CAAC,CAAC;IACFF,SAAS,CAACO,kBAAkB,CAAC;EAC/B,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACJ,UAAU;MAACyB,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCzB,OAAA;MAAK0B,SAAS,EAAC,wBAAwB;MAAAN,QAAA,EAEnCf,MAAM,CAACa,GAAG,CAAEV,KAAK,iBACfR,OAAA,CAACF,KAAK;QAEJiB,EAAE,EAAEP,KAAK,CAACO,EAAG;QACbJ,KAAK,EAAEH,KAAK,CAACG,KAAM;QACnBQ,UAAU,EAAEX,KAAK,CAACW,UAAW;QAC7BL,aAAa,EAAEA,aAAc;QAC7BG,cAAc,EAAEA;MAAe,GAL1BT,KAAK,CAACO,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAAA,eACN,CAAC;AAEP;AAACrB,EAAA,CA/CQD,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA+CrB;AAED,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}