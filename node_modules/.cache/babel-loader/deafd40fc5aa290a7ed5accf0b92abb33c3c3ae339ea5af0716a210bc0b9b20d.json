{"ast":null,"code":"import _toConsumableArray from\"/home/snorlax/Escritorio/proyectos/gitProyectos/nearuser.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/snorlax/Escritorio/proyectos/gitProyectos/nearuser.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//VERSION MEJORADAD POR CHAT GPT [SE IMPLEMNETA LOCALSTORAGE para mantener el estado de los array]\nimport React,{useState,useEffect}from\"react\";import Formulario from\"./Formulario\";import\"../hojas-de-estilo/ListaDeTareas.css\";import Tarea from\"./Tarea\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ListaDeTareas(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tareas=_useState2[0],setTareas=_useState2[1];// Funci贸n para cargar las tareas almacenadas en localStorage al cargar la aplicaci贸n\nuseEffect(function(){var storedTasks=localStorage.getItem(\"tasks\");if(storedTasks){setTareas(JSON.parse(storedTasks));}},[]);var agregarTarea=function agregarTarea(tarea){if(tarea.texto.trim()){tarea.texto=tarea.texto.trim();var tareasActualizadas=[tarea].concat(_toConsumableArray(tareas));setTareas(tareasActualizadas);// Guarda el estado actualizado en localStorage\nlocalStorage.setItem(\"tasks\",JSON.stringify(tareasActualizadas));}};var eliminarTarea=function eliminarTarea(id){var tareasActualizadas=tareas.filter(function(tarea){return tarea.id!==id;});setTareas(tareasActualizadas);// Guarda el estado actualizado en localStorage\nlocalStorage.setItem(\"tasks\",JSON.stringify(tareasActualizadas));};var completarTarea=function completarTarea(id){var tareasActualizadas=tareas.map(function(tarea){if(tarea.id===id){tarea.completada=!tarea.completada;}return tarea;});setTareas(tareasActualizadas);// Guarda el estado actualizado en localStorage\nlocalStorage.setItem(\"tasks\",JSON.stringify(tareasActualizadas));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Formulario,{onSubmit:agregarTarea}),/*#__PURE__*/_jsx(\"div\",{className:\"taras-lista-contenedor\",children:tareas.map(function(tarea){return/*#__PURE__*/_jsx(Tarea,{id:tarea.id,texto:tarea.texto,completada:tarea.completada,eliminarTarea:eliminarTarea,completarTarea:completarTarea},tarea.id);})})]});}export default ListaDeTareas;//VERSION ESRITA POR MI .- \n/*import Formulario from \"./Formulario\";\nimport '../hojas-de-estilo/ListaDeTareas.css'\nimport { useState } from \"react\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = tarea => {\n    console.log(agregarTarea);\n    if (tarea.texto.trim()){\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className='taras-lista-contenedor'>\n        {\n          tareas.map((tarea) =>\n            <Tarea \n              key={tarea.id}\n              id={tarea.id}\n              texto={tarea.texto}\n              completada={tarea.completada}\n              eliminarTarea={eliminarTarea}\n              completarTarea={completarTarea}\n            />\n          )\n        }\n      </div>\n    </>\n  );  \n};\n\nexport default ListaDeTareas;*/","map":{"version":3,"names":["React","useState","useEffect","Formulario","Tarea","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListaDeTareas","_useState","_useState2","_slicedToArray","tareas","setTareas","storedTasks","localStorage","getItem","JSON","parse","agregarTarea","tarea","texto","trim","tareasActualizadas","concat","_toConsumableArray","setItem","stringify","eliminarTarea","id","filter","completarTarea","map","completada","children","onSubmit","className"],"sources":["/home/snorlax/Escritorio/proyectos/gitProyectos/nearuser.github.io/src/componentes/ListaDeTareas.js"],"sourcesContent":["//VERSION MEJORADAD POR CHAT GPT [SE IMPLEMNETA LOCALSTORAGE para mantener el estado de los array]\n\n\nimport React, { useState, useEffect } from \"react\";\nimport Formulario from \"./Formulario\";\nimport \"../hojas-de-estilo/ListaDeTareas.css\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n  const [tareas, setTareas] = useState([]);\n\n  // Funci贸n para cargar las tareas almacenadas en localStorage al cargar la aplicaci贸n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTareas(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  const agregarTarea = (tarea) => {\n    if (tarea.texto.trim()) {\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n\n      // Guarda el estado actualizado en localStorage\n      localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n    }\n  };\n\n  const eliminarTarea = (id) => {\n    const tareasActualizadas = tareas.filter((tarea) => tarea.id !== id);\n    setTareas(tareasActualizadas);\n\n    // Guarda el estado actualizado en localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n  };\n\n  const completarTarea = (id) => {\n    const tareasActualizadas = tareas.map((tarea) => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n\n    // Guarda el estado actualizado en localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n  };\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className=\"taras-lista-contenedor\">\n        {tareas.map((tarea) => (\n          <Tarea\n            key={tarea.id}\n            id={tarea.id}\n            texto={tarea.texto}\n            completada={tarea.completada}\n            eliminarTarea={eliminarTarea}\n            completarTarea={completarTarea}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default ListaDeTareas;\n\n\n//VERSION ESRITA POR MI .- \n/*import Formulario from \"./Formulario\";\nimport '../hojas-de-estilo/ListaDeTareas.css'\nimport { useState } from \"react\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = tarea => {\n    console.log(agregarTarea);\n    if (tarea.texto.trim()){\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className='taras-lista-contenedor'>\n        {\n          tareas.map((tarea) =>\n            <Tarea \n              key={tarea.id}\n              id={tarea.id}\n              texto={tarea.texto}\n              completada={tarea.completada}\n              eliminarTarea={eliminarTarea}\n              completarTarea={completarTarea}\n            />\n          )\n        }\n      </div>\n    </>\n  );  \n};\n\nexport default ListaDeTareas;*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}