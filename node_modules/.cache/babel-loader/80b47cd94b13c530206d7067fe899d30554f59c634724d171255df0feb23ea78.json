{"ast":null,"code":"var _jsxFileName = \"/home/snorlax/Escritorio/proyectos/ReactProy/tareas/src/componentes/ListaDeTareas.js\",\n  _s = $RefreshSig$();\n//VERSION MEJORADAD POR CHAT GPT [SE IMPLEMNETA LOCALSTORAGE para mantener el estado de los array]\nimport React, { useState, useEffect } from \"react\";\nimport Formulario from \"./Formulario\";\nimport \"../hojas-de-estilo/ListaDeTareas.css\";\nimport Tarea from \"./Tarea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListaDeTareas() {\n  _s();\n  const [tareas, setTareas] = useState([]);\n\n  // Funci贸n para cargar las tareas almacenadas en localStorage al cargar la aplicaci贸n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTareas(JSON.parse(storedTasks));\n    }\n  }, []);\n  const agregarTarea = tarea => {\n    if (tarea.texto.trim()) {\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n\n      // Guarda el estado actualizado en localStorage\n      localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n    }\n  };\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n\n    // Guarda el estado actualizado en localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n  };\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n\n    // Guarda el estado actualizado en localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formulario, {\n      onSubmit: agregarTarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taras-lista-contenedor\",\n      children: tareas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n        id: tarea.id,\n        texto: tarea.texto,\n        completada: tarea.completada,\n        eliminarTarea: eliminarTarea,\n        completarTarea: completarTarea\n      }, tarea.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListaDeTareas, \"JZ37RroqkD5G4jx2AuDQKHVz1nE=\");\n_c = ListaDeTareas;\nexport default ListaDeTareas;\n\n//VERSION ESRITA POR MI .- \n/*import Formulario from \"./Formulario\";\nimport '../hojas-de-estilo/ListaDeTareas.css'\nimport { useState } from \"react\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = tarea => {\n    console.log(agregarTarea);\n    if (tarea.texto.trim()){\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className='taras-lista-contenedor'>\n        {\n          tareas.map((tarea) =>\n            <Tarea \n              key={tarea.id}\n              id={tarea.id}\n              texto={tarea.texto}\n              completada={tarea.completada}\n              eliminarTarea={eliminarTarea}\n              completarTarea={completarTarea}\n            />\n          )\n        }\n      </div>\n    </>\n  );  \n};\n\nexport default ListaDeTareas;*/\nvar _c;\n$RefreshReg$(_c, \"ListaDeTareas\");","map":{"version":3,"names":["React","useState","useEffect","Formulario","Tarea","jsxDEV","_jsxDEV","Fragment","_Fragment","ListaDeTareas","_s","tareas","setTareas","storedTasks","localStorage","getItem","JSON","parse","agregarTarea","tarea","texto","trim","tareasActualizadas","setItem","stringify","eliminarTarea","id","filter","completarTarea","map","completada","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/snorlax/Escritorio/proyectos/ReactProy/tareas/src/componentes/ListaDeTareas.js"],"sourcesContent":["//VERSION MEJORADAD POR CHAT GPT [SE IMPLEMNETA LOCALSTORAGE para mantener el estado de los array]\nimport React, { useState, useEffect } from \"react\";\nimport Formulario from \"./Formulario\";\nimport \"../hojas-de-estilo/ListaDeTareas.css\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n  const [tareas, setTareas] = useState([]);\n\n  // Funci贸n para cargar las tareas almacenadas en localStorage al cargar la aplicaci贸n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTareas(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  const agregarTarea = (tarea) => {\n    if (tarea.texto.trim()) {\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n\n      // Guarda el estado actualizado en localStorage\n      localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n    }\n  };\n\n  const eliminarTarea = (id) => {\n    const tareasActualizadas = tareas.filter((tarea) => tarea.id !== id);\n    setTareas(tareasActualizadas);\n\n    // Guarda el estado actualizado en localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n  };\n\n  const completarTarea = (id) => {\n    const tareasActualizadas = tareas.map((tarea) => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n\n    // Guarda el estado actualizado en localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(tareasActualizadas));\n  };\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className=\"taras-lista-contenedor\">\n        {tareas.map((tarea) => (\n          <Tarea\n            key={tarea.id}\n            id={tarea.id}\n            texto={tarea.texto}\n            completada={tarea.completada}\n            eliminarTarea={eliminarTarea}\n            completarTarea={completarTarea}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default ListaDeTareas;\n\n\n//VERSION ESRITA POR MI .- \n/*import Formulario from \"./Formulario\";\nimport '../hojas-de-estilo/ListaDeTareas.css'\nimport { useState } from \"react\";\nimport Tarea from \"./Tarea\";\n\nfunction ListaDeTareas() {\n\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = tarea => {\n    console.log(agregarTarea);\n    if (tarea.texto.trim()){\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n\n  return (\n    <>\n      <Formulario onSubmit={agregarTarea} />\n      <div className='taras-lista-contenedor'>\n        {\n          tareas.map((tarea) =>\n            <Tarea \n              key={tarea.id}\n              id={tarea.id}\n              texto={tarea.texto}\n              completada={tarea.completada}\n              eliminarTarea={eliminarTarea}\n              completarTarea={completarTarea}\n            />\n          )\n        }\n      </div>\n    </>\n  );  \n};\n\nexport default ListaDeTareas;*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}